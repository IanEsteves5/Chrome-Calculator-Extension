var tokenTypes=[new tokenType("ws","\\s+"),new tokenType("real","\\d*\\.\\d+"),new tokenType("int","\\d+"),new tokenType("(","\\("),new tokenType(")","\\)"),new tokenType("+","\\+"),new tokenType("-","-"),new tokenType("*","\\*"),new tokenType("/","/"),new tokenType("%","%"),new tokenType("^","\\^"),new tokenType("err",".*")];var rules=[new rule("INPUT",[new pattern(["EXPR"],function(a){return a[0].val()}),new pattern(["ERROR"],function(a){return a[0].val()})]),new rule("EXPR",[new pattern(["EXPR","+","EXPR2_R+"],function(a){return a[0].val()+a[2].val()}),new pattern(["EXPR","-","EXPR2_R+"],function(a){return a[0].val()-a[2].val()}),new pattern(["EXPR","ws"],function(a){return a[0].val()}),new pattern(["ws","EXPR2"],function(a){return a[1].val()}),new pattern(["EXPR2"],function(a){return a[0].val()})]),new rule("EXPR2",[new pattern(["EXPR2","*","EXPR3"],function(a){return a[0].val()*a[2].val()}),new pattern(["EXPR2","/","EXPR3"],function(a){return a[0].val()/a[2].val()}),new pattern(["EXPR2","%","EXPR3"],function(a){return a[0].val()%a[2].val()}),new pattern(["EXPR3"],function(a){return a[0].val()})]),new rule("EXPR2_R+",[new pattern(["EXPR2_R+","*","EXPR3"],function(a){return a[0].val()*a[2].val()}),new pattern(["EXPR2_R+","/","EXPR3"],function(a){return a[0].val()/a[2].val()}),new pattern(["EXPR2_R+","%","EXPR3"],function(a){return a[0].val()%a[2].val()}),new pattern(["EXPR3_R+"],function(a){return a[0].val()})]),new rule("EXPR3",[new pattern(["EXPR3","^","EXPR4"],function(a){return Math.pow(a[0].val(),a[2].val())}),new pattern(["EXPR4"],function(a){return a[0].val()})]),new rule("EXPR3_R+",[new pattern(["EXPR3_R+","^","EXPR4"],function(a){return Math.pow(a[0].val(),a[2].val())}),new pattern(["EXPR5"],function(a){return a[0].val()})]),new rule("EXPR4",[new pattern(["+","EXPR5"],function(a){return a[1].val()}),new pattern(["-","EXPR5"],function(a){return -a[1].val()}),new pattern(["EXPR5"],function(a){return a[0].val()})]),new rule("EXPR5",[new pattern(["(","EXPR",")"],function(a){return a[1].val()}),new pattern(["NUM"],function(a){return a[0].val()})]),new rule("NUM",[new pattern(["int"],function(a){return parseInt(a[0].val())}),new pattern(["real"],function(a){return parseFloat(a[0].val())})]),new rule("ERROR",[new pattern(["ERROR","err"],function(a){pushErrorLog("["+(a[1].token.pos+1)+"] unexpected character "+a[1].token.content[0]);return a[0].val()}),new pattern([],function(a){return null})])];var errorLog="";function getTokens(d){var c=[];var a="";for(var e=0;e<d.length;e+=a.length){for(var b=0;b<tokenTypes.length;b++){a=tokenTypes[b].regex.exec(d.substring(e));if(a!==null){a=a[0];c.push(new token(tokenTypes[b].id,e,a));break}}}return c}function getParseTree(a){return rules[0].getParseTree(a,0,true)}function calculate(a){errorLog="";return getParseTree(getTokens(a)).val()}function pushErrorLog(a){errorLog+=(errorLog===""?"":"\n")+a}function tokenType(b,a){this.id=b;this.regexStr=a;this.regex=new RegExp("^"+a)}function token(c,b,a){this.id=c;this.pos=b;this.content=a}function rule(b,a){this.id=b;this.patterns=a;this.getParseTree=function(g,c,f){for(var d=0;d<a.length;d++){var e=a[d].getParseTree(g,c,f);if(e!==null){e.id=b;return e}}return null}}function pattern(b,a){this.elements=b;this.getPatternString=function(){return"["+this.elements.join(" ")+"]"};this.getParseTree=function(k,d,j){var f=[];var c=k.length-d;var g=this.elements.length;if(g===0){for(var e=0;e<c;e++){f.push(new parseTreeTerminalNode(k[e]))}return new parseTreeNode(f,a)}while(c>0&&g>0){g--;var h=null;if(this.elements[g]===k[c-1].id){h=new parseTreeTerminalNode(k[c-1])}else{for(var e=0;e<rules.length;e++){if(this.elements[g]===rules[e].id){h=rules[e].getParseTree(k,k.length-c,j&&g===0);break}}}if(h===null){return null}f.unshift(h);c-=h.tokensUsed()}if(j&&c===0){while(g>0){g--;var h=null;for(var e=0;e<rules.length;e++){if(this.elements[g]===rules[e].id){h=rules[e].getParseTree(k,k.length-c,j&&g===0);break}}if(h===null){return null}f.unshift(h)}}if(g>0){return null}if(j&&c>0){return null}return new parseTreeNode(f,a)}}function parseTreeNode(a,b){this.id="";this.children=a;this.val=function(){return b(a)};this.tokensUsed=function(){result=0;for(var c=0;c<a.length;c++){result+=a[c].tokensUsed()}return result}}function parseTreeTerminalNode(a){this.id=a.id;this.children=[];this.token=a;this.val=function(){return this.token.content};this.tokensUsed=function(){return 1}};